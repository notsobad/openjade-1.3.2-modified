Changes in OpenJade 1.3.2 (December 2002)

* Build against OpenSP 1.5

* Minor fixes to MIF backend

* Correct typo in definition of "attribute" in builtin.dsl (Toby Speight)

* Fix quoted of ampersand in XML/SGML transformations (Toby Speight)

Changes in OpenJade 1.3.1 (January 2002)

* Support for newer GNU source configuration tools (autoconf, libtool, automake)

* Support for newer GNU and Microsoft compilers

* Support for more/up to date platforms (Mac OS X, Darwin, BSD, Cygwin etc.)

* Numerous bug fixes to TeX backend for improved table support and two
  sided output. Two new external procedures two control double sided
  output (required by jadetex 3.4 or greater).

  "UNREGISTERED::OpenJade//Characteristic::page-two-side?"
  "UNREGISTERED::OpenJade//Characteristic::two-side-start-on-right?"

* Support for XML Byte Order Marks

Changes in OpenJade 1.3

* The SGML backend will no emit linebreaks when used as -t sgml-raw.

* Jade can bind variables to arbitrary values on the command line. 

* The prlabs1 module of the SGML property set is supported.

* Style sheet extensions.dsl lists all known
  external procedures ready for easy inclusion
  as an external-specification.

* External procedure with public identifier
  "UNREGISTERED::OpenJade//Procedure::expt"
  allows to form integral powers of quantities.
  
* External procedure with public identifier
  "UNREGISTERED::OpenJade//Procedure::sgml-parse"
  allows to parse wrt. an architecture.

* Jade supports force! for inherited characteristics.

* Jade supports character properties.
 
* Jade supports special-query-expressions.

* Jade can bind variables to string values on the command line.

* All standard color spaces supported. 

* Jade ignores duplicate keywords in make expressions, as 
  mandated by DSSSL.

* External procedure with public identifier
  "UNREGISTERED::OpenJade//Procedure::language"
  to create a language object by reference to a POSIX locale.
 
* Language-dependent procedures of the expression language:
  language?, current-language, declare-default-language, 
  with-language, define-language, char<?, char>?, char<=?,
  char>=?, char-ci=?, char-ci<?, char-ci>?, char-ci<=?,
  char-ci>=?, char-upcase, char-downcase, string-ci=?,
  string-equiv?, string<?, string>?, string<=?, string>=?,
  string-ci<?, string-ci>?, string-ci<=?, string-ci>=?.

* The style-sheet.dtd derived from the dsssl architecture
  has been extended (in a backwards compatible way) to
  include the delaration element type forms supported by
  Jade. The public identifier for the dtd is 

  "-//OpenJade//DTD DSSSL Style Sheet//EN" 
  
* char-repertoire, add-name-chars and add-separator-chars
  declaration element type forms are supported. When given
  the -s cmdline flag, Jade doesn't use its builtin 
  character repertoire.
  
* Most of the derived procedures in the query language:
  current-root, node-list-reduce, node-list-contains?,
  node-list-remove-duplicates, node-list-union, 
  node-list-intersection, node-list-difference, 
  node-list-symmetric-difference, node-list-union-map,
  node-list-some?, node-list-every?, node-list-filter,
  node-list->list, node-list-tail, node-list-head,
  node-list-sublist, node-list-count, node-list-last,
  node-list-property, origin, origin-to-subnode-rel,
  tree-root, grove-root, source, subtree, subgrove,
  ancestors, grove-root-path, rsiblings, ipreced,
  ifollow, grove-before?, sort-in-tree-order, tree-before?,
  tree-before, property-lookup, select-by-property, 
  select-by-null-property, select-by-missing-property,
  attribute, referent, q-element, q-class, q-sdata.
  
Changes in OpenJade 1.2.2 

* The HTML and MIF backends are now enabled by default.

* The TeX backend has support for PDF bookmarks. This is
  supported by the new version of jadetex which is included.

* Predefined character names line-feed and carriage-return 
  for the character numbers 10 and 13.

* standard-chars and map-sdata-entity declaration element
  type forms are supported.

* Style language additions: map-constructor.
 
* + and - return a length-spec if any of there arguments
  is a length-spec.

* Most of the non-core expression language:
  c...r, assoc, keyword->string, string->keyword, exact?, inexact?,
  zero?, positive?, negative?, odd?, even?, exp, log, sin, cos,
  tan, asin, acos, atan, expt, exact->inexact, inexact->exact,
  quantity->number, string->list, list->string, map, time<?,
  time>?, time<=?, time>=?.


1.2.1  The begin.
