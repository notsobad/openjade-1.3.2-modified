<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
 "/usr/share/sgml/docbook/xml-dtd-4.1.2/docbookx.dtd">
<article>
  <articleinfo>
    <title>openjade</title>
    <author>
      <firstname>James</firstname>
      <surname>Clark</surname>
    </author>
    <author>
      <firstname>Ian</firstname>
      <surname>Castle</surname>
      <affiliation><email>ian.castle@looksystems.co.uk</email></affiliation>
    </author>
   <copyright> 
     <year>2002</year>
     <holder>OpenJade Project</holder>
   </copyright>
 </articleinfo>

 <section>
   <title>Reference</title>
  
   <refentry>
     <refentryinfo>
	   <date>January 2002</date>
	   <productname>OpenJade</productname>
     </refentryinfo>
     <refmeta>
       <refentrytitle>openjade</refentrytitle>
       <manvolnum>1</manvolnum>
     </refmeta>

     <refnamediv>
       <refname>openjade</refname>
       <refpurpose>apply a DSSSL stylesheet to an SGML or XML document</refpurpose>
     </refnamediv>

     <refsynopsisdiv>
       <cmdsynopsis>
         <command>openjade</command>
         <arg choice="opt"><option>-vCegG2s</option></arg>
         <arg choice="opt"><option>-b <replaceable>encoding</replaceable></option></arg>
         <arg choice="opt"><option>-f <replaceable>error_file</replaceable></option></arg>
         <arg choice="opt"><option>-c <replaceable>catalog_sysid</replaceable></option></arg>
         <arg choice="opt"><option>-D <replaceable>dir</replaceable></option></arg>
         <arg choice="opt"><option>-a <replaceable>link_type</replaceable></option></arg>
         <arg choice="opt"><option>-A <replaceable>arch</replaceable></option></arg>
         <arg choice="opt"><option>-E <replaceable>max_errors</replaceable></option></arg>
         <arg choice="opt"><option>-i <replaceable>entity</replaceable></option></arg>
         <arg choice="opt"><option>-w <replaceable>warning_type</replaceable></option></arg>
         <arg choice="opt"><option>-d <replaceable>dsssl_spec</replaceable></option></arg>
         <arg choice="opt"><option>-V <replaceable>variable<option>=<replaceable>value</replaceable></option></replaceable></option></arg>
         <arg choice="opt"><option>-t <replaceable>output_type</replaceable></option></arg>
         <arg choice="opt"><option>-o <replaceable>output_file</replaceable></option></arg>
         <arg choice="opt" rep="repeat"><option><replaceable>sysid</replaceable></option></arg>
       </cmdsynopsis>
     </refsynopsisdiv>
<!--
openjade [-vCegG2s] [-b encoding] [-f error_file] [-c catalog_sysid] [-D dir] [-a link_type] [-A arch] [-E max_errors] [-i entity] [-w warning_type] [-d dsssl_spec] [-V variable[=value]] [-t (fot|rtf|tex|mif|sgml|xml)] [-o output_file] sysid...
-->
   
     <refsect1>
       <title>Description</title>
  
<para>
     <command>openjade</command> is an implementation of the ISO/IEC 10179:1996 standard DSSSL   
     language.  The DSSSL engine receives as input an SGML or XML document and transforms it into formats like:</para>
<para>* XML representation of the flow object tree.</para>
       <para>* RTF format that can be rendered and printed with Microsoft's free    Word Viewer 97</para>
       <para>* TeX format</para>
       <para>* MIF format that can be rendered and printed with Framemaker</para>
       <para>* SGML or XML format. This is used in conjunction with non-standard    
         flow object classes to generate SGML, thus allowing <command>openjade</command> to be   
         used for SGML/XML transformations.                                   </para>
                                                                              
     <para>The system identifier of the document to be processed is specified as an 
     argument to <command>openjade</command>. If this is omitted, standard input will be read.   </para>
                                                                              
     <para><command>openjade</command> determines the system identifier for the DSSSL specification as 
     follows: </para>
                                                                              
     <para>1. If the -d option is specified, it will use the argument as the       
         system identifier.                                                   </para>
     <para>2. Otherwise, it will look for processing instructions in the prolog of 
         the document. Two kinds of processing instruction are recognized:    </para>
<para>
              &lt;?stylesheet href="sysid" type="text/dsssl"&gt;                    </para>
<para>                 The system data of the processing instruction is parsed like 
                 an SGML start-tag. It will be parsed using the reference     
                 concrete syntax whatever the actual concrete syntax of the   
                 document. The name that starts the processing instruction    
                 can be either stylesheet, xml-stylesheet or xml:stylesheet.  
                 The processing instruction will be ignored unless the value  
                 of the type attribute is one of text/dsssl, text/x-dsssl,    
                 application/dsssl, or application/x-dsssl. The value of href 
                 attribute is the system identifier of the DSSSL              
                 specification.                                               </para>
<para>
              &lt;?dsssl sysid&gt;                                                  </para>
<para>                 The system identifier is the portion of the system data of   
                 the processing instruction following the initial name and    
                 any whitespace.                                              </para>
                                                                              
<para>         Although the processing instruction is only recognized in the        
         prolog, it need not occur in the document entity. For example, it    
         could occur in a DTD. The system identifier will be interpreted      
         relative to where the the processing instruction occurs.             </para>
                                                                              
<para>     3. Otherwise, it will use the system identifier of the document with    
         any extension changed to .dsl.                                       </para>
                                                                              
<para>     A DSSSL specification document can contain more than one                 
     style-specification. If the system identifier of the DSSSL specification 
     is followed by #id, then <command>openjade</command> will use the style-specification whose 
     unique identifier is id. This is allowed both with the <option>-d</option> option and     
     with the processing instructions.                                        </para>
                                                                              
<para>     The DSSSL specification must be an SGML document conforming to the DSSSL 
     architecture. For an example, see <filename>dsssl/demo.dsl</filename>.                        </para>
                                                                              
     <para><command>openjade</command> supports the following options in addition to the normal OpenSP (see <command>onsgmls(1)</command>)    
     options (note that all options are case-sensitive, ie <option>-g</option> and <option>-G</option> are      
     different options):</para>

     <variablelist>
       <varlistentry>
         <term><option>-d <replaceable>dsssl_spec</replaceable></option></term>
         <listitem>
<para>        This specifies that dsssl_spec is the system identifier of the DSSSL  
        specification to be used.                                             </para>
         </listitem>
       </varlistentry>

       <varlistentry>
         <term><option>-G</option></term>
         <listitem>
        <para>Debug mode. When an error occurs in the evaluation of an expression,  
        <command>openjade</command> will display a stack trace. Note that this disables          
        tail-call optimization.</para>
         </listitem>
       </varlistentry>
       <varlistentry>
         <term><option>-c <replaceable>filename</replaceable></option></term>
         <listitem>
           <para>The filename arguments specify catalog files rather than the document 
        entity. The document entity is specified by the first DOCUMENT entry  
        in the catalog files.                                                 </para>
         </listitem>
       </varlistentry>

       <varlistentry>
         <term><option>-s</option></term>
         <listitem>
          <para>
        Strict compliance mode. Currently the only effect is that jade        
        doesn't use any predefined character names, sdata-entity mappings or  
        name-characters. This is useful for checking that your stylesheet is  
        portable to other DSSSL implementations and that it is strictly       
        compliant to the DSSSL specifications.                                </para>
         </listitem>
       </varlistentry>

       <varlistentry>
         <term><option>-t <replaceable>output_type</replaceable></option></term>
         <listitem>
        <para><replaceable>output_type</replaceable> specifies the type of output as follows:                  </para>
             <para><option>fot                                                              </option>
                An XML representation of the flow object tree                 </para>
<para>             <option>rtf</option> <option>rtf-95                                                       </option>
                RTF (used for SGML/XML to RTF transformations)                
                Microsoft's Rich Text Format. rtf-95 produces output          
                optimized for Word 95 rather than Word 97.</para>
<para><option>tex</option>
                TeX (used for SGML/XML to TeX transformations)</para>
<para>             <option>sgml</option> <option>sgml-raw</option>
                SGML (used for SGML/XML to SGML transformations). sgml-raw    
                doesn't emit linebreaks in tags.                              </para>
 <para>            <option>xml</option> <option>xml-raw</option>
                XML (used for SGML/XML to XML transformations). xml-raw       
                doesn't emit linebreaks in tags.</para>
             <para><option>html                                                             </option>
                HTML (used for SGML/XML to HTML transformations)</para>
<para>             <option>mif</option>
                MIF (used for SGML/XML to MIF transformations)                </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><option>-o <replaceable>output_file</replaceable></option></term>
            <listitem>
        <para>Write output to <replaceable>output_file</replaceable> instead of the default. The default       
        filename is the name of the last input file with its extension        
        replaced by the name of the type of output. If there is no input      
        filename, then the extension is added onto jade-out.</para>
            </listitem>
        </varlistentry>

        <varlistentry> 
          <term><option>-V <replaceable>variable</replaceable></option></term>
        <listitem><para>This is equivalent to doing (define variable #t) except that this     
        definition will take priority over any definition of variable in a    
        style-sheet.</para></listitem>
        </varlistentry>
                                                                              
        <varlistentry>
          <term><option>-V <replaceable>variable=value</replaceable></option></term>
        <listitem><para>This is equivalent to doing (define <replaceable>variable</replaceable> "<replaceable>value</replaceable>") except that     
        this definition will take priority over any definition of variable in 
        a style-sheet.</para></listitem>
         </varlistentry>
      
        <varlistentry> 
           <term><option>-V (define <replaceable>variable</replaceable> <replacable>value</replacable>)</option></term>
        <listitem><para>This is equivalent to doing (define variable value) except that this  
        definition will take priority over any definition of variable in a    
        style-sheet. Note that you will probably have to use some escaping    
        mechanism for the spaces to get the entire scheme expression parsed   
        as one cmdline argument.</para></listitem>
        </varlistentry>

        <varlistentry> 
          <term><option>-w<replaceable>type</replaceable></option></term>
        <listitem><para>Control warnings and errors. Multiple <option>-w</option> options are allowed. The     
        following values of type enable warnings:                             </para>
                                                                              
 <para>            <option>xml</option>
                Warn about constructs that are not allowed by XML.</para>
                                                                              
             <para><option>mixed</option>
                Warn about mixed content models that do not allow #pcdata     
                anywhere.</para>
                                                                              
             <para><option>sgmldecl</option>
                Warn about various dubious constructions in the SGML          
                declaration.</para>
                                                                              
             <para><option>should</option>
                Warn about various recommendations made in ISO 8879 that the  
                document does not comply with. (Recommendations are expressed 
                with ``should'', as distinct from requirements which are      
                usually expressed with ``shall''.)</para>
                                                                              
             <para><option>default</option>
                Warn about defaulted references.</para>
                                                                              
             <para><option>duplicate</option>
                Warn about duplicate entity declarations.</para>

             <para><option>undefined</option>
                Warn about undefined elements: elements used in the DTD but   
                not defined.</para>
                                                                              
<para><option>unclosed</option>
                Warn about unclosed start and end-tags.</para>

             <para><option>empty</option>
                Warn about empty start and end-tags.</para>
                                                                              
             <para><option>net</option>
                Warn about net-enabling start-tags and null end-tags.</para>
                                                                              
             <para><option>min-tag</option>
                Warn about minimized start and end-tags. Equivalent to        
                combination of unclosed, empty and net warnings.</para>
                                                                              
             <para><option>unused-map</option>
                Warn about unused short reference maps: maps that are         
                declared with a short reference mapping declaration but never 
                used in a short reference use declaration in the DTD.</para>
                                                                              
             <para><option>unused-param</option>
                Warn about parameter entities that are defined but not used   
                in a DTD. Unused internal parameter entities whose text is    
                INCLUDE or IGNORE won't get the warning.</para>
                                                                              
             <para><option>notation-sysid</option>
                Warn about notations for which no system identifier could be  
                generated.</para>
                                                                              
             <para><option>all</option>
                Warn about conditions that should usually be avoided (in the  
                opinion of the author). Equivalent to: mixed, should,         
                default, undefined, sgmldecl, unused-map, unused-param, empty 
                and unclosed.</para>
                                                                              
        <para>A warning can be disabled by using its name prefixed with no-. Thus   
        <option>-wall</option> <option>-wno-duplicate</option> will enable all warnings except those about      
        duplicate entity declarations.</para>
                                                                              
        <para>The following values for <replaceable>warning_type</replaceable> disable errors:</para>
                                                                              
             <para><option>no-idref</option>
                Do not give an error for an ID reference value which no       
                element has as its ID. The effect will be as if each          
                attribute declared as an ID reference value had been declared 
                as a name.</para>

             <para><option>no-significant</option>
                Do not give an error when a character that is not a           
                significant character in the reference concrete syntax occurs 
                in a literal in the SGML declaration. This may be useful in   
                conjunction with certain buggy test suites.</para>
                                                                              
             <para><option>no-valid</option>
                Do not require the document to be type-valid. This has the    
                effect of changing the SGML declaration to specify VALIDITY   
                NOASSERT and IMPLYDEF ATTLIST YES ELEMENT YES. An option of   
                <option>-wvalid</option> has the effect of changing the SGML declaration to    
                specify VALIDITY TYPE and IMPLYDEF ATTLIST NO ELEMENT NO. If  
                neither <option>-wvalid</option> nor <option>-wno-valid</option> are specified, then the        
                VALIDITY and IMPLYDEF specified in the SGML declaration will  
                be used.                                                      </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect1>

    <refsect1>
      <title>Environment</title>
                                                                              
<para>     OpenJade ignores the SP_CHARSET_FIXED and SP_SYSTEM_CHARSET environment
     variables and always uses Unicode as its internal character set, as if   
     SP_CHARSET_FIXED was 1 and SP_SYSTEM_CHARSET was unset. Thus only the    
     SP_ENCODING environment variable is relevant to OpenJade's handling of   
     character sets.</para>
    </refsect1>

    <refsect1>
      <title>OpenJade Extensions</title>
                                                                              
     <para>The following external procedures are available. These external
     procedures are defined by a prototype in the same manner as in the
     standard. To use one of these external procedures, you must make use of
     the standard external-procedure procedure, using a public identifier of  
     "UNREGISTERED::James Clark//Procedure::name" where name is the name
     given here, typically by including the following in the DSSSL
     specification:</para>
                                                                              
     <para>(define name                                                             
       (external-procedure "UNREGISTERED::James Clark//Procedure::name"))</para>
                                                                              
     <para>Note that external-procedure returns #f if it doesn't know about the     
     specified public identifier. You can use this to enable your DSSSL       
     specifications to work gracefully with other implementations which do    
     not support these extensions.</para>
                                                                              
     <para>For external procedures added by the OpenJade team, use a public         
     identifier of the form "UNREGISTERED::OpenJade//Procedure::name".</para>
                                                                              
     <para>An easy way to get access to all external procedures is to use the style 
     specification dsssl/extensions.dsl#procedures. The file                  
     dsssl/extensions.dsl also contains style specifications which make the   
     nonstandard flow object classes and inherited characteristics supported  
     by the backends available in a convenient way.</para>
                                                                              
      <para><option>Debugging</option></para>
                                                                              
     <para>(debug obj)</para>
                                                                              
     <para>Generates a message including the value of obj and then returns obj.</para>
                                                                              
       <para><option>Simple-page-sequence header/footer control</option></para>
                                                                              
     <para>(if-first-page sosofo1 sosofo2)</para>
                                                                              
     <para>This can be used only in the specification of the value of one of the    
     header/footer characteristics of simple-page-sequence. It returns a      
     sosofo that will display as sosofo1 if the page is the first page of the 
     simple-page-sequence and as sosofo2 otherwise.</para>
                                                                              
                                                                              
     <para>(if-front-page sosofo1 sosofo2)</para>
                                                                              
     <para>This can be used only in the specification of the value of one of the    
     header/footer characteristics of simple-page-sequence. It returns a      
     sosofo that will display as sosofo1 if the page is a front (ie recto,    
     odd-numbered) page and as sosofo2 if it is a back (ie verso,             
     even-numbered) page.</para>
                                                                              
       <para><option>Numbering</option></para>
                                                                              
     <para>(all-element-number)</para>
     <para>(all-element-number osnl)</para>
                                                                              
     <para>This is the same as element-number except it counts elements with any    
     generic identifier. If osnl is not an element returns #f, otherwise      
     returns 1 plus the number of elements that started before osnl. This     
     provides an efficient way of creating a unique identifier for any        
     element in a document.</para>
                                                                              
       <para><option>External entity access</option></para>
                                                                              
     <para>(read-entity string)</para>
                                                                              
     <para>This returns a string containing the contents of the external entity     
     with system identifier string. This should be used only for textual      
     entities (CDATA and SDATA), and not for binary entities (NDATA).</para>
                                                                              
       <para><option>POSIX locale access</option></para>
                                                                              
     <para>(language lang country)</para>
                                                                              
     <para>This procedure returns an object of type language, if the system         
     supports the specified language. lang is a string or symbol giving the   
     two letter language code. country is a string or symbol giving the two   
     letter country code.</para>
                                                                              
     <para>This procedure uses POSIX locales. It is an OpenJade addition. It is not supported on all operating systems.</para>
                                                                              
       <para><option>Extended standard procedures</option></para>
                                                                              
     <para>(sgml-parse sysid #!key active: parent: architecture:)</para>
                                                                              
     <para>This allows you to specify an SGML architecture with respect to which
     the document should be parsed. It is an OpenJade addition.</para>
                                                                              
     <para>(expt q k)</para>
                                                                              
     <para>This allows you to raise a quantity to an integral power. It is an       
     OpenJade addition.</para>
     </refsect1>

     <refsect1>
       <title>Limitations</title>
                                                                              
     <para>This section describes the limitations of the front-end (the             
     general-purpose DSSSL engine); each backend also has its own             
     limitations.</para>
                                                                              
     <para><command>openjade</command> doesn't allow internal definitions at the beginning of bodies and 
     the (test => recipient) variant of cond clauses.</para>
                                                                              
     <para><command>openjade</command> supports only a single, fixed grove plan which comprises the    
     following modules:</para>
                                                                              
       <para>* baseabs</para>
       <para>* prlgabs0</para>
       <para>* prlgabs1</para>
       <para>* instabs</para>
       <para>* basesds0</para>
       <para>* instsds0</para>
       <para>* subdcabs</para>
                                                                              
     <para>It doesn't implement the following parts of SDQL: HyTime support,        
     auxiliary parsing, node regular expressions.</para>
                                                                              
     <para>Query rules, sosofo synchronization, indirect sosofos, reference values, 
     decoration areas and font properties are not supported.</para>
                                                                              
     <para>Note that only inherited characteristics that are applicable to some     
     supported flow object can be specified.</para>
                                                                              
       <para><option>Character/glyph handling</option></para>
                                                                              
     <para>It only supports a single pre-defined character repertoire. A character  
     name of the form U-XXXX where XXXX are four upper-case hexadecimal       
     digits, is recognized as referring to the Unicode character with that    
     code. For many characters, it is also possible to use the ISO/IEC 10646  
     name in lower-case with words separated by hyphens.</para>
                                                                              
     <para>Some common SDATA entity names from the ISO entity sets are recognized   
     and mapped to characters. In addition an SDATA entity name of the form   
     U-XXXX, where XXXX are four upper-case hexadecimal digits, is mapped to  
     the Unicode character with that code.</para>
                                                                              
     <para>OpenJade now supports the standard-chars, map-sdata-entity,              
     add-name-chars, add-separator-chars and char-repertoire declaration      
     element forms, allowing a style-sheet to define additional character     
     names, sdata entity mappings, name characters (i.e. characters allowed   
     in identifiers) and separator characters. Currently the only recognized  
     character repertoire is the built-in repertoire. It has the public       
     identifier "UNREGISTERED::OpenJade//Character Repertoire::OpenJade".</para>
                                                                              
       <para><option>Validation</option></para>
                                                                              
     <para>Several things that it would be desirable to have checked aren't         
     checked:</para>
                                                                              
       <para>* When the allowed value of an inherited characteristic is a symbol,   
         OpenJade checks only that the value is a symbol that is allowed as   
         the value of some characteristic; #t and #f are treated as a special 
         kind of symbol in this case.</para>
       <para>* OpenJade doesn't check whether a flow object is occurring in a       
         context where it is allowed.</para>
       <para>* OpenJade does not prevent flow objects being attached to the         
         principal port of a flow object when the flow object shouldn't have  
         a principal port.</para>
       <para>* Most type-checking is done at run-time not compile-time.</para>
       <para>* OpenJade does not check for non-inherited characteristics that are   
         required to be specified.</para>
       <para>* It doesn't check that optional features that have been used were     
         declared in the features form.</para>
                                                                              
       <para><option>Other limitations</option></para>
                                                                              
     <para>The following primitives are just stubs:</para>
                                                                              
     <para><option>char-script-case</option>
        Always returns last argument.</para>
                                                                              
     <para><option>address-visited?</option>
        Always returns #f.</para>
</refsect1>
<refsect1>
   <title>Examples</title>
   <para>Given an SGML file <command>file.sgml</command>, use the stylesheet <command>file.dsl</command> and publish as an rtf file.</para>

   <para>openjade -t rtf file.sgml</para>

   <para>Using a different stylesheet:</para>

   <para>openjade -t rtf -d docbook.dsl file.sgml</para>
   
   <para>Using the <command>print</command> style specification contained
within the stylesheet</para>
 
   <para>openjade -t rtf -d docbook.dsl#print file.sgml</para>

   <para>And use the html specification within the style sheet to convert
to html</para>

    <para>openjade -t sgml -i html -d docbook.dsl#html file.sgml</para>
</refsect1>

    <refsect1>
      <title>See Also</title>
      <para><command>onsgmls(1)</command></para>
    </refsect1>
    </refentry>
  </section>
</article>
